ch_convert_holding_to_castle_decision = {
	picture = {
		reference = "gfx/interface/illustrations/holding_types/castle_mediterranean.dds"
	}

	ai_check_interval = 0

	is_shown = {
		NOR = {
			has_government = tribal_government
			has_government = herder_government
			has_government = wanua_government
		}
		OR = {
			NOT = { has_government = nomad_government }
			any_held_county = {
				any_in_de_jure_hierarchy = {
					ch_barony_is_valid_for_castle_trigger = { CHARACTER = root }
				}
			}
		}
		is_landed = yes
	}

	widget = {
		# Name of the widget to use. Must be at the path <decision_view_widgets>/<widget_name>.gui
		gui = decision_view_widget_ch_convert_holding
		# Some widgets require a custom controller (see below). Default: default
		controller = create_holy_order
		barony_valid = {
			trigger_if = {
				limit = { exists = this }
				ch_barony_is_valid_for_castle_trigger = { CHARACTER = scope:ruler }
			}
			trigger_else = {
				custom_description = {
					text = "has_ch_barony_selected"
					always = no
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		is_alive = yes
		is_imprisoned = no
		is_at_war = no
	}

	is_valid = {
		is_at_war = no
		custom_description = {
			text = "has_ch_eligble_barony_to_castle_in_county"
			any_held_county = {
				any_in_de_jure_hierarchy = {
					ch_barony_is_valid_for_castle_trigger = { CHARACTER = scope:ruler }
				}
			}
		}
		subject = root.culture
		culture = { has_innovation = innovation_motte }
	}

	cost = {
		gold = 500
	}

	effect = {
		scope:barony.title_province = {
			set_holding_type = castle_holding
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

ch_convert_holding_to_city_decision = {
	picture = {
		reference = "gfx/interface/illustrations/holding_types/city_mediterranean.dds"
	}

	ai_check_interval = 0

	is_shown = {
		NOR = {
			has_government = tribal_government
			has_government = nomad_government
			has_government = herder_government
			has_government = wanua_government
		}
		is_landed = yes
	}

	widget = {
		# Name of the widget to use. Must be at the path <decision_view_widgets>/<widget_name>.gui
		gui = decision_view_widget_ch_convert_holding
		# Some widgets require a custom controller (see below). Default: default
		controller = create_holy_order
		barony_valid = {
			trigger_if = {
				limit = { exists = this }
				ch_barony_is_valid_for_city_trigger = { CHARACTER = scope:ruler }
			}
			trigger_else = {
				custom_description = {
					text = "has_ch_barony_selected"
					always = no
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		is_alive = yes
		is_imprisoned = no
		is_at_war = no
	}

	is_valid = {
		is_at_war = no
		custom_description = {
			text = "has_ch_eligble_barony_to_city_in_county"
			any_held_county = {
				any_in_de_jure_hierarchy = {
					ch_barony_is_valid_for_city_trigger = { CHARACTER = scope:ruler }
				}
			}
		}
		subject = root.culture
		culture = { has_innovation = innovation_city_planning }
	}

	cost = {
		gold = 500
	}

	effect = {
		scope:barony.title_province = {
			set_holding_type = city_holding
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

ch_convert_holding_to_temple_decision = {
	picture = {
		reference = "gfx/interface/illustrations/holding_types/temple_orthodox.dds"
	}

	ai_check_interval = 0

	is_shown = {
		NOR = {
			has_government = tribal_government
			has_government = nomad_government
			has_government = herder_government
			has_government = mandala_government
			has_government = wanua_government
		}
		is_landed = yes
	}

	widget = {
		# Name of the widget to use. Must be at the path <decision_view_widgets>/<widget_name>.gui
		gui = decision_view_widget_ch_convert_holding
		# Some widgets require a custom controller (see below). Default: default
		controller = create_holy_order
		barony_valid = {
			trigger_if = {
				limit = { exists = this }
				ch_barony_is_valid_for_temple_trigger = { CHARACTER = scope:ruler }
			}
			trigger_else = {
				custom_description = {
					text = "has_ch_barony_selected"
					always = no
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		is_alive = yes
		is_imprisoned = no
		is_at_war = no
	}

	is_valid = {
		is_at_war = no
		custom_description = {
			text = "has_ch_eligble_barony_to_temple_in_county"
			any_held_county = {
				any_in_de_jure_hierarchy = {
					ch_barony_is_valid_for_temple_trigger = { CHARACTER = scope:ruler }
				}
			}
		}
		subject = root.culture
		culture = { has_innovation = innovation_city_planning }
	}

	cost = {
		gold = 500
	}

	effect = {
		scope:barony.title_province = {
			set_holding_type = church_holding
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

ch_convert_holding_to_tribal_decision = {
	picture = {
		reference = "gfx/interface/illustrations/holding_types/tribe_grass.dds"
	}

	ai_check_interval = 0

	is_shown = {
		OR = {
			has_government = tribal_government
			has_government = wanua_government
		}
		is_landed = yes
	}

	widget = {
		# Name of the widget to use. Must be at the path <decision_view_widgets>/<widget_name>.gui
		gui = decision_view_widget_ch_convert_holding
		# Some widgets require a custom controller (see below). Default: default
		controller = create_holy_order
		barony_valid = {
			trigger_if = {
				limit = { exists = this }
				ch_barony_is_valid_for_tribal_trigger = { CHARACTER = scope:ruler }
			}
			trigger_else = {
				custom_description = {
					text = "has_ch_barony_selected"
					always = no
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		is_alive = yes
		is_imprisoned = no
		is_at_war = no
	}

	is_valid = {
		is_at_war = no
		custom_description = {
			text = "has_ch_eligble_barony_to_tribal_in_county"
			any_held_county = {
				any_in_de_jure_hierarchy = {
					ch_barony_is_valid_for_tribal_trigger = { CHARACTER = scope:ruler }
				}
			}
		}
		subject = root.culture
	}

	cost = {
		gold = 500
	}

	effect = {
		scope:barony.title_province = {
			set_holding_type = tribal_holding
			county = {
				every_county_province = {
					limit = {
						has_holding = yes
						is_county_capital = no
						OR = {
							has_holding_type = tribal_holding
							has_holding_type = nomad_holding
							has_holding_type = herder_holding
						}
					}
					remove_holding = yes
				}
			}
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

ch_convert_holding_to_nomad_decision = {
	picture = {
		reference = "gfx/interface/illustrations/holding_types/mpo_nomad_holding.dds"
	}

	ai_check_interval = 0

	is_shown = {
		has_government = nomad_government
		is_landed = yes
	}

	widget = {
		# Name of the widget to use. Must be at the path <decision_view_widgets>/<widget_name>.gui
		gui = decision_view_widget_ch_convert_holding
		# Some widgets require a custom controller (see below). Default: default
		controller = create_holy_order
		barony_valid = {
			trigger_if = {
				limit = { exists = this }
				ch_barony_is_valid_for_nomad_trigger = { CHARACTER = scope:ruler }
			}
			trigger_else = {
				custom_description = {
					text = "has_ch_barony_selected"
					always = no
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		is_alive = yes
		is_imprisoned = no
		is_at_war = no
	}

	is_valid = {
		is_at_war = no
		custom_description = {
			text = "has_ch_eligble_barony_to_nomad_in_county"
			any_held_county = {
				any_in_de_jure_hierarchy = {
					ch_barony_is_valid_for_nomad_trigger = { CHARACTER = scope:ruler }
				}
			}
		}
		subject = root.culture
	}

	cost = {
		gold = 500
	}

	effect = {
		scope:barony.title_province = {
			set_holding_type = nomad_holding
			county = {
				if = {
					limit = {
						exists = prev
					}
					if = {
						limit = {
							culture != root.domicile.domicile_culture
						}
						set_county_culture = root.domicile.domicile_culture
					}
					if = {
						limit = {
							faith != root.domicile.domicile_faith
						}
						set_county_faith = root.domicile.domicile_faith
					}
					if = {
						limit = {
							prev = { NOT = { has_holding_type = herder_holding } }
						}
						if = {
							limit = {
								development_level >= 1
							}
							change_development_progress_with_overflow = {
								value = development_level
								multiply = 10
								multiply = -1
							}
						}
						change_county_fertility = medium_county_fertility_level_gain
						root = {
							add_gold = {
								value = minor_gold_value
								add = prev.development_level
							}
						}
					}
				}
				every_county_province = {
					limit = {
						has_holding = yes
						is_county_capital = no
						OR = {
							has_holding_type = tribal_holding
							has_holding_type = nomad_holding
							has_holding_type = herder_holding
						}
					}
					remove_holding = yes
				}
			}
			if = {
				limit = {
					has_university_building_trigger = yes
				}
				if = {
					limit = {
						has_building_or_higher = generic_university
					}
					remove_building = generic_university
				}
				else_if = {
					limit = {
						has_building_or_higher = al_azhar_university
					}
					remove_building = al_azhar_university
				}
				else_if = {
					limit = {
						has_building_or_higher = sankore_university
					}
					remove_building = sankore_university
				}
				else_if = {
					limit = {
						has_building_or_higher = siena_university
					}
					remove_building = siena_university
				}
				else_if = {
					limit = {
						has_building_or_higher = nalanda_university
					}
					remove_building = nalanda_university
				}
				else_if = {
					limit = {
						has_building_or_higher = house_of_wisdom_01
					}
					remove_building = house_of_wisdom_01
				}
				else_if = {
					limit = {
						has_building_or_higher = al_qarawiyyin_university_01
					}
					remove_building = al_qarawiyyin_university_01
				}
				else_if = {
					limit = {
						has_building_or_higher = somapura_university_01
					}
					remove_building = somapura_university_01
				}
				else_if = {
					limit = {
						has_building_or_higher = cluny_abbey_01
					}
					remove_building = cluny_abbey_01
				}
			}
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}

ch_convert_holding_to_temple_citadel_decision = {
	picture = {
		reference = "gfx/interface/illustrations/holding_types/tgp_castle_se_asia.dds"
	}

	ai_check_interval = 0

	is_shown = {
		has_government = mandala_government
		is_landed = yes
	}

	widget = {
		# Name of the widget to use. Must be at the path <decision_view_widgets>/<widget_name>.gui
		gui = decision_view_widget_ch_convert_holding
		# Some widgets require a custom controller (see below). Default: default
		controller = create_holy_order
		barony_valid = {
			trigger_if = {
				limit = { exists = this }
				ch_barony_is_valid_for_temple_citadel_trigger = { CHARACTER = scope:ruler }
			}
			trigger_else = {
				custom_description = {
					text = "has_ch_barony_selected"
					always = no
				}
			}
		}
	}

	is_valid_showing_failures_only = {
		is_alive = yes
		is_imprisoned = no
		is_at_war = no
	}

	is_valid = {
		is_at_war = no
		custom_description = {
			text = "has_ch_eligble_barony_to_temple_citadel_in_county"
			any_held_county = {
				any_in_de_jure_hierarchy = {
					ch_barony_is_valid_for_temple_citadel_trigger = { CHARACTER = scope:ruler }
				}
			}
		}
		subject = root.culture
	}

	cost = {
		gold = 500
	}

	effect = {
		scope:barony.title_province = {
			set_holding_type = temple_citadel_holding
		}
	}
	
	ai_potential = {
		always = no
	}

	ai_will_do = {
		base = 0
	}
}
